#!/usr/bin/env bash

cat << "EOF"
 ___     ____                             _             _   
|_ _|   |  _ \  ___ _ __ ___  _ __   ___ | |_ ___ _ __ | |_ 
 | |    | | | |/ _ \ '_ ` _ \| '_ \ / _ \| __/ _ \ '_ \| __|
 | | _  | |_| |  __/ | | | | | |_) | (_) | ||  __/ | | | |_ 
|___( ) |____/ \___|_| |_| |_| .__/ \___/ \__\___|_| |_|\__|
    |/                       |_|                            

EOF

set -e -o pipefail -p

# Keep the computer awake for the duration of this script.
[[ $(command -v caffeinate) ]] && caffeinate -dusw $$ &

# Ask for the administrator password
sudo -v

# sudo keep-alive
while true; do
  sudo -vn
  sleep 250 # default timestamp_timeout is 5 minutes
  kill -0 "$$" || exit
done 2>/dev/null &

# INT/TERM trap
trap 'exit 1' INT TERM

if [[ $(uname -a) == *Darwin* ]] && [[ ! $(command -v brew) ]]; then
  echo "Installing Homebrew"
  /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
elif [[ $(uname -a) == *Microsoft* ]]; then
  # WSL
  sudo apt update -y
  sudo apt upgrade -y
  sudo apt-get install -y build-essential curl file git python-setuptools ruby
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install)"
  echo "export HOMEBREW_BUILD_FROM_SOURCE=1" >> ~/.bash_profile
  . ~/.bash_profile
fi

# iCloud Drive links
if [[ ! -e ~/.ssh ]]; then
  if [[ -e ~/Library/Mobile\ Documents/com~apple~CloudDocs/ssh ]]; then
    ln -Fs ~/Library/Mobile\ Documents/com~apple~CloudDocs/ssh ~/.ssh
  elif [[ -e $(pwd)/iCloudDrive ]]; then
    cp -R "$(pwd)/iCloudDrive/ssh" ~/.ssh
  else
    echo "Can't continue without a working ~/.ssh ðŸ¤”"
    exit 1
  fi

  chmod 700 ~/.ssh
  chmod -R 600 ~/.ssh/*
  chmod 644 ~/.ssh/authorized_keys
fi

if [[ -e ~/.config/.git/config ]] && [[ $(cat ~/.config/.git/config | grep github.com:LukeChannings/.config) ]]; then
  cd ~/.config
  git pull
  cd -
else
  echo "Linking config files for programs not using \$XDG_CONFIG_HOME"
  if [[ -e ~/.config ]]; then
    echo "Found existing ~/.config, moving it to ~/.config.old"
    mv ~/.config ~/.config.old
  fi
  git clone git@github.com:LukeChannings/.config.git ~/.config
fi

if [[ $(uname -s) == 'Darwin' ]]; then
  ~/.config/install.macos
fi

if [[ $(uname -s) == 'Linux' ]]; then
  ~/.config/install.linux
fi

ln -Fs /usr/local/bin/nvim /usr/local/bin/vim
fish -c 'fundle install'

# Set FISH as default shell
echo "$(brew --prefix)/bin/fish" | sudo tee -a /etc/shells
chsh -s $(brew --prefix)/bin/fish

ln -fs ~/.config/editorconfig ~/.editorconfig
ln -fs ~/.config/tern/tern_config ~/.tern-config
ln -fs ~/.config/tmux/config ~/.tmux.conf

vim +PlugUpgrade +PlugInstall +qall
pip install neovim

cd ~/.local/share/nvim/plugged/tern_for_vim
  npm i
cd -

cd ~/.local/share/nvim/plugged/YouCompleteMe
  ./install.py --tern-completer
cd -

